ChangeLog for Matrix Brandy - as forked from Sourceforge after V1.20.1
======================================================================

* V1.21.0
- Replaced system font with hand-reconstructed Acorn system font based on that
  found in RISC OS 3.1
- Initial Teletext support. Font similar to the SAA5050, teletext codes handled
  as a stream.
* V1.21.1
- Software double buffering implemented, Mode 7 Flash supported.
* V1.21.2
- Mode 7 character frame buffer implemented, line and screen recalculation
  implemented.
- Glyph size changed to 8x9 (was 8x8).
- Implemented some of RISC OS 5's Teletext extensions on VDU23,18. See
  docs/Mode7 for more details.
* V1.21.3
- Teletext fixes for edge cases
- Big performance enhancement when running in Mode 7 no-update mode
  (VDU23,18,1,0|)
- Nested FOR..NEXT fix - thanks Coeus @ stardot.org.uk forums for the patch
- *. is remapped to *ls - so running *. now lists the contents of your current
  directory.
- Mode 7 screen memory access, mapped to &FFFF7C00-&FFFF7FFF. Althought Tube
  BASIC didn't directly allow host screen access, this is where it would have
  been mapped for file system access and OSWORD 6. In Matrix Brandy, just access
  the memory directly.  Note that scrolling does NOT move the start address of
  the screen, the top left character cell will ALWAYS be at &FFFF7C00.
- Fix for PLOTting out of range causing a segfault.
- Fix for DRAWing out of bounds on non-scaled modes with < 800x600 resolution.
* V1.21.4
- Slight rename of application to Matrix Brandy, to distinguish between this
  and the "base" version from Sourceforge, and other forks.
- MOUSE commands no longer error as unsupported. Most now no-op, but
  MOUSE X, Y, B[, C] returns mouse position and button state. If specified,
  C contains a centisecond counter.
  (In this implementation, it equals the value of TIME).
- INKEY with negative argument partially supported. (-129 to -255 not supported)
* V1.21.5
- Merged J.G.Harston's "Banana Brandy" fork, and cleaned up some breakages
  caused by this.
- Refactor code to use new mos.c function names, remove aliases from mos.h
- PLOT codes for drawing dotted lines implemented, along with skipping start
  and end points as required.
- Fix behaviour of OPENUP for file not found - thanks Phlamethrower @ *. for
  the pointer.
* V1.21.6
- Implemented some network connectivity. Connect using OPENUP"ip4:host:port".
  Currently only EOF#, BGET# and BPUT# work (both bytes and strings for BPUT)
- New demo: examples/Mode7/telstar - a client for Telstar!
- Fix for bad plotting, again from Coeus @ Stardot. Thank you!
* V1.21.7
- Bug fixes for Mode 7 flash and Networking
- String handling was not 64-bit clean. Bins are now multiples of 64-bits long.
- Initial framework for building standalone applications written in BASIC.
- Mode 7 now runs with a high-resolution font.
- MOUSE ON and MOUSE OFF control whether or not the mouse is displayed.
  As per RISC OS it is OFF upon mode change.
- Mode 7 glyph width can be changed on the fly to 12, 14 or 16 pixels wide,
  using VDU23,18,255,x| where x is 12, 14 or 16. Other values are ignored.
- New command *WINTITLE - sets the SDL window title bar amd icon text.
- Background operation now working, as is launching from a non-console source
  for example a Window Manager launcher icon.
* V1.21.8
- Networking: Uses getaddrinfo instead of gethostbyname, this also means we
  can connect to IPv6 hosts. The port can be specified by name (as per
  /etc/services) or by number.
- New command *FULLSCREEN - switches SDL fullscreen mode on or off
- Graphics cursor now on right-most point of circle after drawing,
  as per RISC OS.
- VDU5 text plotting is now transparent.
- Resize window on mode change. We also now start in Mode 0, and report
  bad mode to the program if SDL is unable to select the desired mode.
  This has broken the teletext aspect control, so that is for now disabled.
- Can now define your own screen modes with *NewMode.
- INKEY now working with multiple keys.
* V1.21.9
- Implement *REFRESH (based on RTR's BB4W/BBCSDL).
  Possible divergence: An error condition will re-enable Refresh.
- INKEY implementation improved, we now also pick up mouse keys.
- ESCAPE now works within the SDL window. *FX229 also implemented to disable
  or enable ESCAPE.
- Display warnings/help for *NewMode
- Improve rendering of MODEs 3 and 6.
- MODE 7 flash now locked to the centisecond timer.
- MODE 7 screen memory: An earlier omission meant only the byte pointer
  functions worked, now word pointer functions also work.
* V1.21.10
- *REFRESH now follows BB4W/BBCSDL behaviour, with extension *REFRESH ONERROR
  which uses the behaviour from V1.21.9 (disabled, re-enabled on error)
- COLOUR r,g,b and GCOL r,g,b now behaves properly when values > 255 supplied.
- OSBYTE 42 implemented to allow BASIC and user programs to get and set REFRESH
  state, allowing access while maintaining logical separation of language and
  MOS.
- OSBYTEs 40 and 41 implmented for fine-tuning the ESCAPE polling.
  OSBYTE 40 with X=0 resets to default.
- Screen banks enabled, set at compile time (default is 4). Use with OSBYTE
  112 and 113. Not enabled for MODE 7.
- OSBYTEs 20 and 25 implemented for resetting the system font.
- BB4W/BBCSDL's VDU23,22 implemented to a degree, defining MODE 126.
- MODEs 3 and 6 now have black bars when background colour used.
- RISC OS 3.5-style MODE commands will define a new mode (126) if a previously
  defined mode is not available. The extended RISC OS 5.x format is not
  supported.
- *NewMode extended to allow input of X and Y eigen factors, used internally
  by the MODE "string" format.
- Initial SWI support, currently only a few SWIs are supported.
  No support for external modules, all supported SWIs are part of the
  MOS code.
- examples/teklib updated - this pre-dates SDL support for Brandy, using Tek
  to provide an element of graphics.  This has been updated to use OSBYTE 43
  to send characters to the controlling terminal, so if run from an xterm,
  the old Tek demos once again run correctly as intended.
* V1.21.11
- Bug fixed: POINT(x,y) should return the logical mode-specific colour number
  rather than an RGB value.
- Bug fixed: GET returning 0 and key value for some keys
- Bug fixed: Crash when ON ERROR handler invoked in program run using CHAIN
  at immediate mode
- Initial structure in place for OSWORD; OSWORD 10 implemented including
  BBC-style call to &FFF1 and SWI &07.
- OSBYTEs 134 and 165 implemented. As Brandy doesn't have the Acorn-style
  editing cursor, these two function identically.
- OSBYTEs 106 and 135 implemented partially (135 only complete in MODE 7),
  106 can only turn the pointer on or off.
- Invocation behaviour change:
  If BASIC program starts with # as the first character, assume we have a
  shell-compatible start line that is invoking Brandy. In this case, if the
  program is started on the Linux command line as a parameter to Brandy, it
  will exit upon program completion instead of returning to immediate mode
  (as if -quit was set on the command line). This also means a BASIC program
  can be made executable and will run when run as a script, and Brandy will
  exit upon completion.
* V1.21.12
- Bug fixed: Closed file warning clobbered ERR value. Thanks to dhg2 @ Stardot
  for highlighting this one.
- Bug fixed: OSWORD via &FFF1 wasn't returning the A register. Thanks to
  luigino @ Github for highlighting this.
- Bugs fixed: Multiple compiler warnings when compiled with -Wall, and
  static analysis.
- Bug fixed: Text-only builds no longer complain about "Unsupported Basic V
  feature" when using WAIT.
- Brought the text-only builds up to date, brought makefile.text back to
  top level.
- *WinTitle now works on text-only builds using XTerm control codes.
- Changing screen mode no longer clears FULLSCREEN.
- Expanded OSBYTE 42 to get or set fullscreen state, and fixed an off-by-one
  error in returning Refresh state.
- RPM SPEC file now builds text builds as well as the graphical build, the
  resulting RPM includes all three builds (graphical, text, simple-text).
* V1.21.13
- Rework temp file bits to use mkstemp instead of tmpnam.
- Reinstated MODE 7 width setting via VDU23,18,255 (from 1.21.7). Note that
  it does not resize the window, and re-selecting MODE 7 restores the default
  glyph width of 16.
- Add *ScreenSave - saves the displayed screen as a Windows Bitmap file
- Add *ScreenLoad - Loads the screen into the currently selected display
  bank for VDU writes
- Initial makefile for SDL on MinGW. Much testing required.
- New Mode 7 demo. Some Prestel graphics, and images from the edit.tf online
  Teletext page editor. Unlike the BBCSDL demo this embeds the data in the
  program itself. Apart from pressing R to reveal it isn't Brandy-specific.
